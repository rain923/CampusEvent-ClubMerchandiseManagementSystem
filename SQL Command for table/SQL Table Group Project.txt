-- CART table
CREATE TABLE CART (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USER_EMAIL VARCHAR(255) NOT NULL,
    MERCH_ID INT NOT NULL,
    QUANTITY INT NOT NULL DEFAULT 1,
    FOREIGN KEY (MERCH_ID) REFERENCES MERCHANDISE(ID)
    -- Add other indexes as needed
);

-- CLUBS table
CREATE TABLE CLUBS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CLUB_NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    CATEGORY VARCHAR(100),
    FOUNDED_YEAR INT,
    MEMBERS_COUNT INT DEFAULT 0,
    ADMIN_ID INT,
    QR_CODE VARCHAR(255)
    -- Add foreign keys and indexes as needed
);

-- CLUB_MEMBERS table
CREATE TABLE CLUB_MEMBERS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USER_ID INT NOT NULL,
    CLUB_ID INT NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    FOREIGN KEY (CLUB_ID) REFERENCES CLUBS(ID),
    -- Add other foreign keys and indexes as needed
    UNIQUE (USER_ID, CLUB_ID) -- Assuming a user can only be a member once per club
);

-- EVENTS table
CREATE TABLE EVENTS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    EVENT_NAME VARCHAR(255) NOT NULL,
    EVENT_DATE DATETIME NOT NULL,
    LOCATION VARCHAR(255),
    DESCRIPTION VARCHAR(255),
    CLUB_ID INT NOT NULL,
    PAYMENT DECIMAL(10,2),
    USER_ID INT,
    STATUS VARCHAR(50),
    FOREIGN KEY (CLUB_ID) REFERENCES CLUBS(ID)
    -- Add other foreign keys and indexes as needed
);

-- EVENT_PARTICIPANTS table
CREATE TABLE EVENT_PARTICIPANTS (
    EVENT_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    JOINED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (EVENT_ID, USER_ID),
    FOREIGN KEY (EVENT_ID) REFERENCES EVENTS(ID)
    -- Add other foreign keys as needed
);

-- MERCHANDISE table
CREATE TABLE MERCHANDISE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CLUB_ID INT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    PRICE DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (CLUB_ID) REFERENCES CLUBS(ID)
    -- Add other indexes as needed
);
[10:25 PM]
-- Create USERS table
CREATE TABLE USERS (
    ID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    PASSWORD VARCHAR(100) NOT NULL,
    USER_TYPE VARCHAR(20) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    STATUS VARCHAR(20) NOT NULL
);

-- Create ORDERS table (using quotes for the special character)
CREATE TABLE "ORDER$" (
    ID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    USER_EMAIL VARCHAR(100) NOT NULL,
    NAME VARCHAR(100) NOT NULL,
    PHONE VARCHAR(20) NOT NULL,
    ADDRESS VARCHAR(255) NOT NULL,
    POSTCODE VARCHAR(20) NOT NULL,
    CITY VARCHAR(100) NOT NULL,
    STATE VARCHAR(50) NOT NULL,
    RECEPT_IMAGE VARCHAR(255),
    STATUS VARCHAR(20) NOT NULL,
    MERCH_ID INT NOT NULL,
    CONSTRAINT FK_USER_EMAIL FOREIGN KEY (USER_EMAIL) REFERENCES USERS(EMAIL),
    CONSTRAINT FK_MERCH_ID FOREIGN KEY (MERCH_ID) REFERENCES MERCHANDISE(ID)
);